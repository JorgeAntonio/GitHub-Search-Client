(()=>{var e={637:e=>{"use strict";e.exports=JSON.parse('{"client_id":"d0e8234888a3e04056e0","client_secret":"614f2acbcba58408e4d977825863c7e0d0bcb6fa"}')},898:e=>{e.exports=class{constructor(e,s){this.client_id=e,this.client_secret=s,this.repos_count=7,this.repos_sort="created: asc"}async fetchUser(e){const s=await fetch(` http://api.github.com/users/${e}?client_id=${this.client_id}&client_secret=${this.client_secret} `),t=await fetch(` http://api.github.com/users/${e}/repos?client_id=${this.client_id}&client_secret=${this.client_secret}&per_page=${this.repos_count}&sort=${this.repos_sort}`),a=await t.json();return{userData:await s.json(),repositories:a}}}},451:e=>{e.exports=class{constructor(){this.profile=document.getElementById("profile")}showProfile(e){console.log(e),this.profile.innerHTML=` \n\n            <div class="card mt-2 animate__animated animate__bounceInLeft">\n                <img src="${e.avatar_url}" class="card-img-top"/>\n                <div class="card-body">\n                    <h3 class="card-title">${e.name} / ${e.login}</h3>\n                    <a href="${e.html_url}" class="btn btn-primary btn-block" target="_blank">Ver perfil</a>\n                    <spam class="badge badge-success">\n                        Seguidores: ${e.followers}\n                    </spam>\n                    <spam class="badge badge-primary">\n                        Siguiendo: ${e.following}\n                    </spam>\n                    <spam class="badge badge-warning">\n                        Compania: ${e.company}\n                    </spam>\n                    <spam class="badge badge-info d-block mt-1">\n                        Blog: ${e.blog}\n                    </spam>\n                </div>\n            </div>\n\n        `,this.clearMessage()}showMessage(e,s){const t=document.createElement("div");t.className=s,t.appendChild(document.createTextNode(e));const a=document.querySelector(".row"),n=document.querySelector("#profile");a.insertBefore(t,n)}clearMessage(){const e=document.querySelector(".alert");e&&e.remove()}showRepositories(e){let s="";e.forEach((e=>{s+=`\n            <div class="card card-body mt-2 animate__animated animate__bounceInUp">\n                <div class="row">\n                    <div class="col-md-6">\n                        <a href="${e.html_url}" target="_blank">${e.name}</a>\n                    </div>\n                    <div class="col-md-6">\n                        <span class="badge badge-primary"> Lenguage: ${e.language} </span>\n                        <span class="badge badge-success"> Forks: ${e.forks_count} </span>\n                    </div>\n                </div>\n            </div>\n            `})),document.getElementById("repositories").innerHTML=s}}}},s={};function t(a){var n=s[a];if(void 0!==n)return n.exports;var r=s[a]={exports:{}};return e[a](r,r.exports,t),r.exports}(()=>{const e=t(451),s=t(898),{client_id:a,client_secret:n}=t(637),r=new s(a,n),o=new e;document.getElementById("userForm").addEventListener("submit",(e=>{const s=document.getElementById("textSearch").value;""!==s&&r.fetchUser(s).then((e=>{"Not Found"===e.userData.message?o.showMessage("Usuario no encontrado","alert alert-danger mt-2 col-md-12"):(o.showProfile(e.userData),o.showRepositories(e.repositories))})),e.preventDefault()}))})()})();